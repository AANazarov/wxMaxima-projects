/* [wxMaxima batch file version 1] [ DO NOT EDIT BY HAND! ]*/
/* [ Created with wxMaxima version 22.04.0 ] */
/* [wxMaxima: input   start ] */
maxima_tempdir: "C:\\Users\\Default\\AppData\\Local\\Temp"$          /* C:\\Users\\Alexander\\AppData\\Local\\Temp */;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
kill(all)$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
fpprintprec : 6$                  /* точность вычислений */
numer: false$                          /* проведение расчётов только с плавающей точкой, а не с рациональными числами */
keepfloat: true$                            /* не переводить десятичную запись числа в рациональную форму */
ratepsilon: 2e-8$                          /* мера, на которую рациональное число при переводе может отклониться от конечной десятичной записи */
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
load(numericalio)$                  /* загрузка пакета для чтения и записи матричных или потоковых данных */          
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
load ("interpol") $                 /* загрузка пакета интерполяции */
load(draw)$
load("mnewton")$

load(vector3d);                 /* загрузка пакета работы с векторами в 3-хмерном пространстве*/
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
stats_numer;                    /* выдача результатов в формате с плавающей запятой */
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
log10(x) := log(x) / log(10);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
set_draw_defaults (font = "Arial", font_size = 10)$                 /* устанавливаем вид и размер шрифта */
/* [wxMaxima: input   end   ] */


/* [wxMaxima: title   start ]
Контрольная работа № 1. 
Элементы линейной алгебры, векторной алгебры, аналитической геометрии
   [wxMaxima: title   end   ] */


/* [wxMaxima: section start ]
ЗАДАНИЕ №1
   [wxMaxima: section end   ] */


/* [wxMaxima: comment start ]
Дана система линейных уравнений. Доказать ее совместность и решить тремя способами:
а) методом Гаусса;
б) методом Крамера;
в) матричным способом.
   [wxMaxima: comment end   ] */


/* [wxMaxima: caption start ]

   [wxMaxima: caption end   ] */
/* [wxMaxima: image   start ]
png
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
   [wxMaxima: image   end   ] */

/* [wxMaxima: subsect start ]
Проверка совместности системы по теореме Кронекера-Капелли:
   [wxMaxima: subsect end   ] */


/* [wxMaxima: subsubsect start ]
Расчеты
   [wxMaxima: subsubsect end   ] */


/* [wxMaxima: comment start ]
Матрица системы:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
A: matrix ([1, -2, -1],
                  [1, -1, 1],
                  [3, 1, 1] );
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Вектор-столбец коэффициентов при неизвестных:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
B: matrix ([4], [4], [2]);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Расширенная матрица системы:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
Ap: addcol (A, B);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Ранг матрицы - число. равное наибольшему из порядков миноров данной мтрицы, отличных от нуля.
   [wxMaxima: comment end   ] */


/* [wxMaxima: comment start ]
Ранг матрицы системы А:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
rank(A);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Ранг расширенной матрицы системы Ар:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
rank(Ap);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Т.к. r(A) = r(Ap), ⇒ система совместна.
   [wxMaxima: comment end   ] */


/* [wxMaxima: subsubsect start ]
Проверка
   [wxMaxima: subsubsect end   ] */


/* [wxMaxima: heading5 start ]
путем преобразования матрицы к ступенчатому виду
   [wxMaxima: heading5 end   ] */


/* [wxMaxima: input   start ] */
triangularize(Ap);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
echelon(Ap) ;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: heading5 start ]
путем вычисления определителя матрицы А
   [wxMaxima: heading5 end   ] */


/* [wxMaxima: comment start ]
Проверка - вычисления определителя матрицы А:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
minor(A, 1, 1);
determinant(%);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
minor(A, 1, 2);
determinant(%);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
minor(A, 1, 3);
determinant(%);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
Alg(A, i, j):= (-1)^(i+j) * determinant(minor(A, i, j))$        /* функция алгебраического дополнения */
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
Alg(A, 1, 1);
Alg(A, 1, 2);
Alg(A, 1, 3);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
A[1,1] * Alg(A, 1, 1) + A[1,2] * Alg(A, 1, 2) + A[1,3] * Alg(A, 1, 3);      /*  расчет определителя */
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
determinant(A);         /* проверка расчета определителя */
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Т.к. det A ≠ 0, ⇒ r(A) = r(Ap), ⇒ система совместна.
   [wxMaxima: comment end   ] */


/* [wxMaxima: subsect start ]
Решение методом Гаусса
   [wxMaxima: subsect end   ] */


/* [wxMaxima: input   start ] */
	
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
X: matrix ([X[1,1]],
                  [X[2,1]],
                  [X[3,1]]);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: subsubsect start ]
Решение
   [wxMaxima: subsubsect end   ] */


/* [wxMaxima: comment start ]
Итерация 0:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
Agauss_0: Ap;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Итерация 1:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
Agauss_1: Agauss_0;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
for i: 1 thru 4 do Agauss_1[2, i]: Agauss_1[2, i] + Agauss_1[1, i] * -(1/1);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
Agauss_1;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Итерация 2:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
Agauss_2: Agauss_1;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
for i: 1 thru 4 do Agauss_2[3, i]: Agauss_2[3, i] + Agauss_1[1, i] * -(3/1);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
Agauss_2;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Итерация 3:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
Agauss_3: Agauss_2;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
for i: 1 thru 4 do Agauss_3[3, i]: Agauss_3[3, i] + Agauss_3[2, i] * -(7/1);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
Agauss_3;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Преобразованная матрица:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
Ap: Agauss_3;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Проверка схемы Гаусса:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
triangularize(Ap);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
echelon(Ap) ;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Из 3-го уравнения:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
Ap[3, 3] * X[3, 1] = Ap[3, 4];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
solve(%, X[3, 1]);          /* решение уравнение */
X[3, 1]: ev(X[3, 1], %);            /* выразим из решения уравнения */
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Из 2-го уравнения:;
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
Ap[2, 2] * X[2, 1] + Ap[2, 3] * X[3, 1] = Ap[2, 4];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
solve(%, X[2, 1]);          /* решение уравнение */
X[2, 1]: ev(X[2, 1], %);            /* выразим из решения уравнения */
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Из 1-го уравнения:;
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
Ap[1, 1] * X[1, 1] + Ap[1, 2] * X[2, 1] + Ap[1, 3] * X[3, 1] = Ap[1, 4];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
solve(%, X[1, 1]);          /* решение уравнения */
X[1, 1]: ev(X[1, 1], %);            /* выразим из решения уравнения */
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Решение:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
X;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: subsubsect start ]
Проверка
   [wxMaxima: subsubsect end   ] */


/* [wxMaxima: comment start ]
Проверка:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
A . X - B;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: subsect start ]
Решение методом Крамера
   [wxMaxima: subsect end   ] */


/* [wxMaxima: subsubsect start ]
Решение
   [wxMaxima: subsubsect end   ] */


/* [wxMaxima: heading5 start ]
Проверка наличия решения
   [wxMaxima: heading5 end   ] */


/* [wxMaxima: input   start ] */
Δ: determinant(A);         /* главный определитель матрицы системы */
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Т.к. det A ≠ 0, ⇒ система имеет единственное решение.
   [wxMaxima: comment end   ] */


/* [wxMaxima: comment start ]
Решение:
   [wxMaxima: comment end   ] */


/* [wxMaxima: heading5 start ]
Определитель Δ1
   [wxMaxima: heading5 end   ] */


/* [wxMaxima: input   start ] */
A;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
B;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Определитель Δ1
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
A1: addcol (B, col(A,1), col(A,2));
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Вычисления определителя:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
minor(A1, 1, 1);
determinant(%);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
minor(A1, 1, 2);
determinant(%);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
minor(A1, 1, 3);
determinant(%);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
Alg(A1, 1, 1);
Alg(A1, 1, 2);
Alg(A1, 1, 3);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
A1[1,1] * Alg(A1, 1, 1) + A1[1,2] * Alg(A1, 1, 2) + A1[1,3] * Alg(A1, 1, 3);      /*  расчет определеителя */
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Проверка вычисления определителя:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
Δ1: determinant(%);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: heading5 start ]
Определитель Δ2
   [wxMaxima: heading5 end   ] */


/* [wxMaxima: comment start ]
Определитель Δ2:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
A2: addcol (col(A,1), B, col(A,3));
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Вычисления определителя:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
minor(A2, 1, 1);
determinant(%);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
minor(A2, 1, 2);
determinant(%);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
minor(A2, 1, 3);
determinant(%);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
Alg(A2, 1, 1);
Alg(A2, 1, 2);
Alg(A2, 1, 3);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
A2[1,1] * Alg(A2, 1, 1) + A2[1,2] * Alg(A2, 1, 2) + A2[1,3] * Alg(A2, 1, 3);      /*  расчет определеителя */
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Проверка вычисления определителя:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
Δ2: determinant(%);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: heading5 start ]
Определитель Δ3
   [wxMaxima: heading5 end   ] */


/* [wxMaxima: comment start ]
Определитель Δ3:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
A3: addcol (col(A,1), col(A,2), B);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Вычисления определителя:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
minor(A3, 1, 1);
determinant(%);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
minor(A3, 1, 2);
determinant(%);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
minor(A3, 1, 3);
determinant(%);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
Alg(A3, 1, 1);
Alg(A3, 1, 2);
Alg(A3, 1, 3);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
A3[1,1] * Alg(A3, 1, 1) + A3[1,2] * Alg(A3, 1, 2) + A3[1,3] * Alg(A3, 1, 3);      /*  расчет определеителя */
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Проверка вычисления определителя:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
Δ3: determinant(%);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: heading5 start ]
Нахождение корней уравнения
   [wxMaxima: heading5 end   ] */


/* [wxMaxima: input   start ] */
X[1,1]: Δ1 / Δ ;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
X[2,1]: Δ2 / Δ ;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
X[3,1]: Δ3 / Δ ;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
X;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: subsubsect start ]
Проверка
   [wxMaxima: subsubsect end   ] */


/* [wxMaxima: comment start ]
Проверка:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
A . X - B;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: subsubsect start ]
Вычисление определителей для формул Крамера
   [wxMaxima: subsubsect end   ] */


/* [wxMaxima: subsect start ]
Решение матричным способом
   [wxMaxima: subsect end   ] */


/* [wxMaxima: subsubsect start ]
Решение
   [wxMaxima: subsubsect end   ] */


/* [wxMaxima: comment start ]
Обратная матрица:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
A^^(-1);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
Ainv: invert(A);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Проверка нахождения обратной матрицы:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
A;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
determinant(A);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
minor(A, 1, 1);
determinant(%);
Alg(A, 1, 1);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
minor(A, 1, 2);
determinant(%);
Alg(A, 1, 2);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
minor(A, 1, 3);
determinant(%);
Alg(A, 1, 3);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
minor(A, 2, 1);
determinant(%);
Alg(A, 2, 1);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
minor(A, 2, 2);
determinant(%);
Alg(A, 2, 2);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
minor(A, 2, 3);
determinant(%);
Alg(A, 2, 3);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
minor(A, 3, 1);
determinant(%);
Alg(A, 3, 1);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
minor(A, 3, 2);
determinant(%);
Alg(A, 3, 2);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
minor(A, 3, 3);
determinant(%);
Alg(A, 3, 3);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
matrix ( [Alg(A, 1, 1), Alg(A, 2, 1), Alg(A, 3, 1)],
              [Alg(A, 1, 2), Alg(A, 2, 2), Alg(A, 3, 2)],
              [Alg(A, 1, 3), Alg(A, 2, 3), Alg(A, 3, 3)] );
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
% * 1/determinant(A);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
Ainv;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Решение:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
X: A^^(-1) . B;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: subsubsect start ]
Проверка
   [wxMaxima: subsubsect end   ] */


/* [wxMaxima: comment start ]
Проверка:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
A . X - B;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: subsect start ]
Проверка решения системы уравнений средствами Maxima
   [wxMaxima: subsect end   ] */


/* [wxMaxima: input   start ] */
kill(X);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
X: matrix ([X[1,1]],
                  [X[2,1]],
                  [X[3,1]]);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Система уравнений равновесия (в матричной форме):
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
eq:    A . X = B;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
eq1:    row(A, 1) . col(X, 1) = B[1,1];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
eq2:    row(A, 2) . col(X, 1) = B[2,1];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
eq3:    row(A, 3) . col(X, 1) = B[3,1];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Система уравнений равновесия (в скалярной форме для реализации функции solve):
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
linsolve ([eq1, eq2, eq3], [X[1,1], X[2,1], X[3,1]]);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
X: ev(X, %);            /* выразим из решения уравнения */
/* [wxMaxima: input   end   ] */


/* [wxMaxima: section start ]
ЗАДАНИЕ №2
   [wxMaxima: section end   ] */


/* [wxMaxima: caption start ]

   [wxMaxima: caption end   ] */
/* [wxMaxima: image   start ]
png

   [wxMaxima: image   end   ] */

/* [wxMaxima: caption start ]

   [wxMaxima: caption end   ] */
/* [wxMaxima: image   start ]
png
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
   [wxMaxima: image   end   ] */

/* [wxMaxima: input   start ] */
a: [3, 1, 0];
b: [2, -1, 0];
c: [5, 5, 0];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: subsect start ]
Проверка образования базиса
   [wxMaxima: subsect end   ] */


/* [wxMaxima: subsubsect start ]
Решение
   [wxMaxima: subsubsect end   ] */


/* [wxMaxima: comment start ]
Любые 2 неколлинеарных вектора на плоскости образуют базис.
   [wxMaxima: comment end   ] */


/* [wxMaxima: comment start ]
Проверим коллинеарность векторов А и В
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
a[1] / b[1];
float(%);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
a[2] / b[2];
float(%);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Вывод - вектора А и В неколлинеарны, ⇒ образуют базис.
   [wxMaxima: comment end   ] */


/* [wxMaxima: subsubsect start ]
Проверка
   [wxMaxima: subsubsect end   ] */


/* [wxMaxima: comment start ]
Два вектора коллинеарны тогда и только тогда, когда их векторное произведение = 0.
   [wxMaxima: comment end   ] */


/* [wxMaxima: comment start ]
Функция для расчета длины вектора:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
len(Y):= sqrt ( sum (Y[i]^2, i, 1, length(Y)) );
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Длина вектора a:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
len(a);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
len_a: sqrt (a[1]^2 + a[2]^2);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Длина вектора b:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
len(b);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
len_b: sqrt (b[1]^2 + b[2]^2);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Скалярное произведение векторов:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
SPV_ab: a[1] * b[1] + a[2] * b[2];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
a.b;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Косинус угла между векторами:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
cosφ_ab: a.b / (len(a) * len(b));
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
float(%);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Cинус угла между векторами:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
sinφ_ab: sqrt (1 - cosφ_ab^2);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
float(%);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Модуль векторного произведения векторов:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
VPV_ab: len(a)* len(b) * sinφ_ab;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
float(%);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cross(a, b);            /* вычисление ВПВ средствами Maxima (пакет vector3d) */
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
len (cross(a, b));
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
float(%);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Т.к. ВПВ ≠ 0, ⇒ векторы неколлинеарны, ⇒ они образуют базис.
   [wxMaxima: comment end   ] */


/* [wxMaxima: subsect start ]
Разложение вектора по базису
   [wxMaxima: subsect end   ] */


/* [wxMaxima: subsubsect start ]
Решение
   [wxMaxima: subsubsect end   ] */


/* [wxMaxima: input   start ] */
a;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
b;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
c;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Представим вектор С в виде: С = α*A + β*B, и найдем α и β.
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
eq1:    α * a[1] + β * b[1] = c[1];
eq2:    α * a[2] + β * b[2] = c[2];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
sol:        solve ([eq1, eq2], [α, β]);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Извлечем нужные значения из списка решений:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
α: ev(α, sol);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
β: ev(β, sol);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: subsubsect start ]
Проверка
   [wxMaxima: subsubsect end   ] */


/* [wxMaxima: input   start ] */
α * a + β * b;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: section start ]
ЗАДАНИЕ №3
   [wxMaxima: section end   ] */


/* [wxMaxima: caption start ]

   [wxMaxima: caption end   ] */
/* [wxMaxima: image   start ]
png

   [wxMaxima: image   end   ] */

/* [wxMaxima: caption start ]

   [wxMaxima: caption end   ] */
/* [wxMaxima: image   start ]
png
iVBORw0KGgoAAAANSUhEUgAAARsAAAAYCAIAAABFrM5sAAAAA3NCSVQICAjb4U/gAAANPUlEQVR4nO2baVgT1xrHT1ZCIhEIBBRBEBDBaqu2KK1WUbHWBRCxaBW09darVay1arVXLNZbrxYrWq2odYmKKyD6QF1atChSF6xIRI3KvhkW2RICIZM590PIMElmkgkGa5+H/7fMnO03/3nPeWfmBEBioQ05CYvGeQms2VzhoKBoUV4zqnteejTU7mioHR1oRHeMPNdM0pZ5UhUeXLb5z3aCM/WnPhLYzhLYzjol0xxQNxVkHtu8eOqbAz9Lb9Mr3FaQunbqIAGP7z526bFHLeaNQVl5ff/q8AAvgTU3+ESD7jlZ0hx7+/DjL8xrERM5nlYazFMyqMU0S2hDToIJ74gkE4uWTfRx4LAcOCyOYOCEpSKxXu/dzt0Jri9jdhAIYyEEwTi6jGJcgPCouuTwwogNqeLq5sbSaz+FD2DThcGHS9SdBVT5/x3Bpo1g07QBJZyf1hX/DaTM3/a+IOCHp4jhKVnyHDvmiE3MEZseac4iD+KmDHuzP49Gs4tK04koVJo828V+3Pd/1iiaHx8Mc3GaJipFRKUEjRKMoOxc9DA+d2DYt8evP5HKVPp3IyLZ7M+ynXWy0cJ4WnVgPkLgI0rj1ZHGOOPeGQqVnprh6DZzz+0qhapKoVLW5iaEujjOPFONZ+9ubhy4Tk0TdhhjIQTBOLqIYkraNaZHPeqRRUQUZojkyO6LDVhcyzM+d2ewRsU9w2aP5kvR02NuymNuyi0b3y23N4zg0jjTjxAs7crMaA8ad8Zx7ozj+F5Vd772YemtUS1Xl/RjD47NU0EIIVQX7RjFFsw5J5hzrt7UAJDyU7P7sd1mi562kpaRHw/j0l0XZ+jnmaZlDE8rLaYcQvMvbodxRr0jUP3xadxB34rxOcitla68uelKfKnu5caDY6Jih570WAhAtByuizPMgaAqwjWK4RO1dLKtNqMDvFFjhrOBql3V8RutOBl/4lbSmgVJaxasiE+TyKBlYrvpWvzRKhcnpo1QyDU4izY+llRAgbOzwNmZiTtOs+7FpekWVWQePlllHzjeT1OO3n/8BwMaz4saz4t+azA6ArR437yFZ4UxaaL53hzSUsw+fRyhVJJfQ5kMAGAKDxuCFpMJAJO0FJk6jDPiHaHY/N6s4ovpknbsSOvzKpX/mCE6I8C4UbPGRI1bB1x7iJIdetJjIQDRckgl+WaBUBSVrA82NTQB98BATwYAAABV7t5dV+prJVnJkqzknStD3nojeHtO08tGFay9clg8+ptp/Hrg6Cw0HBZaXFyB0Hvb8Xvb8RlGW1I/u3mrmeHu7Yq9NXHx8mS23mW23r3zBAFAlrnC1/HN9bfb9Cu2ZGz+7jp74ofWv0wbaG/N7TM8cve9ZsP2Gba2fLq6vKTUkngGmAwAjGNS7FfHOxJ03sSvVg5+EBMUvCW7bkt2XVvF2TW/8HcfWeimM06MGzGnf4rcOuAaGbED4zB0Ec9CDKLlUJeXmAFCWRQiCq26kP5s/NfRI9ma36zhsberyx7eSN11I3XXiskDGOXpq0MWJ1e/TEyhVZm/q0OWjIGVla00obOj4bDU8mY5BGw2h802MV/BmsoqlO4g6I01wuHxaLCOBuuqX6BAk+gS1Gu9cSqlmuPu4Td2beqDEvHRkNbT0RMjE5/rl6VZWbFpaIusyZJ4BpjUGzfesa53JOicYesvnlsmvLFu7MB1Ywd6zMyafWLfTFe9NRLjpm40dW5DcKN2kHDosRCDaDnQFhllEDNkMrOAzX9sPcSKSVzQGec0Jte+n997/fwAAO+FRM2LC5u87mz8scKZq7y69qJDLc0t7hs8yYOpzimrQplDnQQE7SBqNQBqVE2hPQgAYLI6p3g1ooKABgCg0wEANoE7JXWGldBKcV4T3Sfii9lvu9AB8A7fvuv380EHd54smrfSU6eklRUbmEqkzMbTyhATrcq59JeUmJtm7zvuPa9eJG0ZeEeCDgCg23gETI5SeF4HAJw4+3PUJ74XEhcN1s3StNxUI8osbn1wo3aQc+iwkIB0cFCkMFcmIgpWp637iRV7cOEAshSExh+x6kDMhcGbnxYhwIvdhSEoxdvCA9dla5/GGK5BjiyCfng8Lg0qW1sBAMYTeZqgjzMdymQKCPg0AACAssZGSHcGAPR1NJJJtSkUgCHkW2ufQbjvTQ203n+5oBwA3YhSqRBA43DJ7mMdNgAAJTxs8FrMTkZFxvdh888rCYuz/L8X3/5mEOE5095hapf8HL68cUva/iEQALDm9NLQT5ZMiOydmxzRB/eMquWmkbaDFzVbMRmAU7aDnIUEpIODEoX5MjZrwOY7O767MyXhh0kORi8ivd9I//59+zp1aYGS5yTeDEhvQiGEEK0XTbOiOzo70tHmJ2lxn74/ZUu+ds5iuLgI6VAhVyjkCuOTJMN7lL8N8vRxaed096wQ4b6DcN8Z6UN+c9Gc3N2YSElJFbYasGzteXSBg51eQShvaYF0obMTFTZiPACAujx97WRfBx5POPSj+NtYJoVhQs1SCwDoFXWO9PVaO2k4UfQOAABgzemv/vNi6pzBVgBwAOB4RRy4lrLAOn3TgUf4uQvjpvJ8R8qNFJ35/N1+fJ7wrfmiJ7h1Ag8OgBl2GGEhBtFy0IXOFEDMFmkUQPnDFNGjgE2bpvZlAKhqepa+fvUh4qLo89ynbpEfv2H+uyn44sre6/1njel4N4XWSmtQutBZCJ6f2bBy++lbz9ux4GH08fayBXVSaZ1UauLR2CZw/kyh9PJlicYMtPBqhtQ+NNI+NHKCDXktmsPEWWOsKs6evdeuHdwzidwt+ENfvYLqmpoGlOfp40GFjRCPDkDz1bN5o7bfKKvM2fnOg//M3Zit1MNEADDnDQCuX/lDM7wDAABYW1LaJm/CTVQ0wYSIcdYyWQt+7sK4TT8pkNhKB2jphQttn55/UpwV4/rb2m1/dIYUHhwAM+wwykIEouXgefqYAumSCKc+9EXWxvf1sl7mkA33IYSw5f7Rbzf+8kepAlUpUFVz2c3Dy0LmH5Bo3/ir7scOotuGJ9cY+bithlCtkN5PiQ0JXH6xHvt00CjeHsSnWwdueyxDIFRe/dx9+EYx9h1F/TwhyIoZsJUZsLUAO4iqXlxa4sHgTk4obcV9TlFXJIY4Ok7ZLW5srbsbP9nRYcqhEuRQCQIhhKoH8WOdBUMXp0kNRtiWt9mfyxmyPK1Erqj9K2GGm1vUeUOOmr0fsFnvbs3YOZoLnGYcKTL40oNnI8XrvNbSfZNsJiRUobqYBQgsMH/PhMY4Mu/I0FUPt/hzHcZvzChqVhY1K1Ut5ZmbxvcdFpur8z3KJDekYCuCaKqpC36cMDZOgmsDB94hUjs6OQxdxLMQg2g44grfjSvEVeu4bSleZyMiiiiVeGuAjX6uwPBYkdUOIYTyW1s/9LKzsrJx8rRx8vQPXbkvW6rCVc7d4A34YWfIIwoRb0TEG9/SJNU0TsixRghhe2a0W2c2wRr5w9P27JU+I3ARBZHCbWOs7D+2sv84pWObnuJ0OAdXZ+sTnEEt+aJ/j3bj8xz8pqw+LcHt62u7udaHAwBrZDzugmqF1v8ZP/ftPtYsa8c3gtefL1YaFlFe/8KTPSw2906MJ82Kzxvwda7uDh9dNlK8zkmh9uC0QSuysJ46MFNaYIqZuxEx48i8w6Hr7UpS12bvXDB6gJ0Vw86KYWU3YPSCHVk1umVMcRugE3NDCNvrHqb/b1bY5lzdZLYTHBOJHZ0cBCg4FkKQDg6xKlZMcNtSuczGRbxGvQ4yiCioLtsTxPcL4vutva0ir0dJqpz1kXvLu1ITKYwbbROwRTO7qvM2hH6Xb3TPnCmhVaKoiP3F+AW2bI+G8eUxiaRBN3vMluNuPBbMAQDQeENXXW3Az7sYOKVmVDnrI/eaj9LJITE/BaCif9K+PrrrvC8j2r6MaEtPvde1ZwytWu5dZ4bPcOlCTbTywuXK6V/+y5sBAJBlnZROi/J9iWsIpWk/P56+baE7rg0NZnrqvZfGJFIHurljtiB373nJ1WV/Ja8ZXrH3p1/xH/UwcCrUGg6zUXAc3pb4gk6gbolTS8hwjYIQqktF6lJRmP9nv3Z537CyODMx8bcCRdcq39sQ+EH8IwRCVdGlXTtP6//lwTzJ8479eOohwUg0jC+FSaSuo1uWG0IIYfu15b5hiXo7/aiZ28lhLkonR7fptY0opP5cVF+v6Csy/YwfQnVF0qKQ1Rkmt71aXMr8HXOj9j+xTC7W8jBp15l8BYQQVT7PTr1apgOqrkha9HdhGsii3BBCCFWNj5OWTFyQVG3wtN2d5lqeg0CvaUS1JX+k+bTHcIvOJPibWtvjo6tXHeumTJhYSHFKzFd77ljmb5XKB7smOTGwNwhMv2/uGvjc9rdgGsiS3Gjjr0u8eUwWz8k3aJkoj2Sh6x5qi/pnRDRIukHqdZdcJu9lQ2XjguX649r0euUPnq8ak2gAr567G6hfEcc/OKJ61KPXUP+kd3096tHrr56I6lGPLKmeiOpRjyypnojqUY8sqf8DpcU/kyZJKLAAAAAASUVORK5CYII=
   [wxMaxima: image   end   ] */

/* [wxMaxima: input   start ] */
A1: [10, 6];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
A2: [-2, 8];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
A3: [6, 8];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: subsect start ]
Определение длины вектора a1a2
   [wxMaxima: subsect end   ] */


/* [wxMaxima: comment start ]
Найдем проекции вектора a1a2 из координат точек А1 и А2:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
a1a2: [a1a2[1], a1a2[2]];           /* создание вектора */
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
a1a2[1]: A2[1] - A1[1];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
a1a2[2]: A2[2] - A1[2];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
a1a2;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Найдем длину вектора a1a2:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
len(a1a2);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
len_a1a2: sqrt (a1a2[1]^2 + a1a2[2]^2);         /* проверка */
/* [wxMaxima: input   end   ] */


/* [wxMaxima: subsect start ]
Определение угла между векторами a1a2 и a1a3
   [wxMaxima: subsect end   ] */


/* [wxMaxima: comment start ]
Найдем проекции вектора a1a3 из координат точек А1 и А3:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
a1a3: [a1a3[1], a1a3[2]];           /* создание вектора */
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
a1a3[1]: A3[1] - A1[1];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
a1a3[2]: A3[2] - A1[2];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
a1a3;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Найдем длину вектора a1a3:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
len(a1a3);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
len_a1a3: sqrt (a1a3[1]^2 + a1a3[2]^2);         /* проверка */
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Скалярное произведение векторов:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
a1a2 . a1a3;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
SPV_a1a2_a1a3: a1a2[1] * a1a3[1] + a1a2[2] * a1a3[2];         /* проверка */
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Косинус угла между векторами:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
cosφ_a1a2_a1a3: a1a2 . a1a3 / (len(a1a2) * len(a1a3));
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
float(%);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
float(%);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Угол между векторами (в радианах):
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
φ_a1a2_a1a3: acos (cosφ_a1a2_a1a3);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
float(%);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Угол между векторами (в градусах):
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
φ_a1a2_a1a3 * 180/π;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
float(%);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: subsect start ]
График
   [wxMaxima: subsect end   ] */


/* [wxMaxima: input   start ] */
A1;
A2;
A3;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
a1a2;
a1a3;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
len(a1a2);
len(a1a3);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
wxdraw2d (xrange = [-5, 15], yrange = [0, 15],
                    head_length = 1.0, head_angle = 10,
                    color = red,  key = "вектор a1a2", vector( [A1[1], A1[2] ], [ a1a2[1], a1a2[2] ]),
                    color = blue, key = "вектор a1a3", vector( [A1[1], A1[2] ], [ a1a3[1], a1a3[2] ]))$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: section start ]
ЗАДАНИЕ №4
   [wxMaxima: section end   ] */


/* [wxMaxima: caption start ]

   [wxMaxima: caption end   ] */
/* [wxMaxima: image   start ]
png

   [wxMaxima: image   end   ] */

/* [wxMaxima: caption start ]

   [wxMaxima: caption end   ] */
/* [wxMaxima: image   start ]
png
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
   [wxMaxima: image   end   ] */

/* [wxMaxima: input   start ] */
A1: [10, 6, 6];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
A2: [-2, 8, 2];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
A3: [6, 8, 9];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
A4: [7, 10, 3];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
kill(a1a2, a1a3);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: subsect start ]
График
   [wxMaxima: subsect end   ] */


/* [wxMaxima: comment start ]
Создание векторов:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
a1a2: [ a1a2[1], a1a2[2], a1a2[3] ];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
a1a3: [ a1a3[1], a1a3[2], a1a3[3] ];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
a1a4: [ a1a4[1], a1a4[2], a1a4[3] ];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
a2a3: [ a2a3[1], a2a3[2], a2a3[3] ];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
a2a4: [ a2a4[1], a2a4[2], a2a4[3] ];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
a3a4: [ a3a4[1], a3a4[2], a3a4[3] ];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Проекции векторов:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
a1a2: [A2[1] - A1[1], A2[2] - A1[2], A2[3] - A1[3]];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
a1a3: [A3[1] - A1[1], A3[2] - A1[2], A3[3] - A1[3]];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
a1a4: [A4[1] - A1[1], A4[2] - A1[2], A4[3] - A1[3]];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
a2a3: [A3[1] - A2[1], A3[2] - A2[2], A3[3] - A2[3]];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
a2a4: [A4[1] - A2[1], A4[2] - A2[2], A4[3] - A2[3]];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
a3a4: [A4[1] - A3[1], A4[2] - A3[2], A4[3] - A3[3]];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Длины векторов:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
len(a1a2);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
len(a1a3);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
len(a1a4);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
len(a2a3);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
len(a2a4);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
len(a3a4);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
wxdraw3d (/* xrange = [-2, 10], yrange = [6, 10], zrange = [2, 9], */
                    head_length = 0.5, head_angle = 10,
                    /*view = [45, 45],*/
                    color = red,  key = "вектор a1a2", vector([ A1[1], A1[2], A1[3] ], [ a1a2[1], a1a2[2], a1a2[3] ]),
                    color = blue,  key = "вектор a1a3", vector([ A1[1], A1[2], A1[3] ], [ a1a3[1], a1a3[2], a1a3[3] ]),
                    color = green,  key = "вектор a1a4", vector([ A1[1], A1[2], A1[3] ], [ a1a4[1], a1a4[2], a1a4[3] ]),
                    color = cyan,  key = "вектор a2a3", vector([ A2[1], A2[2], A2[3] ], [ a2a3[1], a2a3[2], a2a3[3] ]),
                    color = grey,  key = "вектор a2a4", vector([ A2[1], A2[2], A2[3] ], [ a2a4[1], a2a4[2], a2a4[3] ]),
                    color = brown,  key = "вектор a3a4", vector([ A3[1], A3[2], A3[3] ], [ a3a4[1], a3a4[2], a3a4[3] ]) )$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: subsect start ]
Определение площади грани А1А2А3
   [wxMaxima: subsect end   ] */


/* [wxMaxima: comment start ]
Из геом.смысла ВПВ ⇒ модуль ВПВ численно равен площади параллелограмма, образованного векторами, ⇒ S_A1A2A3 = 1/2 ВПВ a1a2 и a1a3
   [wxMaxima: comment end   ] */


/* [wxMaxima: subsubsect start ]
Решение
   [wxMaxima: subsubsect end   ] */


/* [wxMaxima: comment start ]
Проекции векторов:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
a1a2: [A2[1] - A1[1], A2[2] - A1[2], A2[3] - A1[3]];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
a1a3: [A3[1] - A1[1], A3[2] - A1[2], A3[3] - A1[3]];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Найдем ВПВ, заданных проекциями:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
kill(i, j, k);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
mVPV_a1a2_a1a3: matrix [ [i , j, k], 
                                                  [ a1a2[1], a1a2[2], a1a2[3] ], 
                                                  [ a1a3[1], a1a3[2], a1a3[3]] ];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
VPV_a1a2_a1a3: ''determinant(mVPV_a1a2_a1a3);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Найдем проекции ВПВ:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
minor(mVPV_a1a2_a1a3, 1, 1);
determinant(%);
VPVx: Alg(mVPV_a1a2_a1a3, 1, 1);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
minor(mVPV_a1a2_a1a3, 1, 2);
determinant(%);
VPVy: Alg(mVPV_a1a2_a1a3, 1, 2);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
minor(mVPV_a1a2_a1a3, 1, 3);
determinant(%);
VPVz: Alg(mVPV_a1a2_a1a3, 1, 3);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
mVPV_a1a2_a1a3: [VPVx, VPVy, VPVz];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Определим модуль ВПВ, заданных проекциями:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
len(mVPV_a1a2_a1a3);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
VPV_a1a2_a1a3: sqrt (VPVx² + VPVy² + VPVz²);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
float(%);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Площадь грани А1А2А3
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
S_A1A2A3: 1/2 * VPV_a1a2_a1a3;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
float(%);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: subsubsect start ]
Проверка (1-й способ)
   [wxMaxima: subsubsect end   ] */


/* [wxMaxima: comment start ]
Длина вектора a1a2:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
len(a1a2);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
len_a1a2: sqrt (a1a2[1]² + a1a2[2]² + a1a2[3]²);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Длина вектора a1a3:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
len(a1a3);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
len_a1a3: sqrt (a1a3[1]² + a1a3[2]² + a1a3[3]²);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Скалярное произведение векторов:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
a1a2 . a1a3;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
SPV_a1a2_a1a3: a1a2[1] * a1a3[1] + a1a2[2] * a1a3[2]  + a1a2[3] * a1a3[3];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Косинус угла между векторами:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
cosφ_a1a2_a1a3: a1a2 . a1a3 / (len(a1a2) * len(a1a3));
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
float(%);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Cинус угла между векторами:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
sinφ_a1a2_a1a3: sqrt (1 - cosφ_a1a2_a1a3^2);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
float(%);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Модуль векторного произведения векторов:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
VPV_a1a2_a1a3: len(a1a2)* len(a1a3) * sinφ_a1a2_a1a3;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
float(%);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: subsubsect start ]
Проверка (2-й способ)
   [wxMaxima: subsubsect end   ] */


/* [wxMaxima: input   start ] */
cross(a1a2, a1a3);            /* вычисление ВПВ средствами Maxima (пакет vector3d) */
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
len (cross(a1a2, a1a3));
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
float(%);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: subsect start ]
Определение объема пирамиды
   [wxMaxima: subsect end   ] */


/* [wxMaxima: comment start ]
Из геом.смысла СмПВ ⇒ модуль СмПВ численно равен объему параллелепипеда, построенного на векторах, и равен 1/6 объема пирамиды, построенной на векторах, ⇒ Vпир = 1/6 СмПВ a1a2, a1a3, a1a4
   [wxMaxima: comment end   ] */


/* [wxMaxima: subsubsect start ]
Решение
   [wxMaxima: subsubsect end   ] */


/* [wxMaxima: comment start ]
Проекции векторов:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
a1a2: [A2[1] - A1[1], A2[2] - A1[2], A2[3] - A1[3]];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
a1a3: [A3[1] - A1[1], A3[2] - A1[2], A3[3] - A1[3]];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
a1a4: [A4[1] - A1[1], A4[2] - A1[2], A4[3] - A1[3]];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
СмПВ есть скалярное произведение ВПВ двух первых векторов на третяий вектор.
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
mVPV_a1a2_a1a3;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
a1a4;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
SmPV: mVPV_a1a2_a1a3 . a1a4;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
SmPV: mVPV_a1a2_a1a3[1] * a1a4[1] + 
              mVPV_a1a2_a1a3[2] * a1a4[2] +
              mVPV_a1a2_a1a3[3] * a1a4[3];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Объем пирамиды:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
Vпир = 1/6 * abs(SmPV);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
float(%);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: subsubsect start ]
Проверка
   [wxMaxima: subsubsect end   ] */


/* [wxMaxima: comment start ]
СмПВ a1a2, a1a3, a1a4 в матричной форме:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
mSmPV: matrix [ [a1a2[1] , a1a2[2], a1a2[3] ], 
                              [ a1a3[1], a1a3[2], a1a3[3] ], 
                              [ a1a4[1], a1a4[2], a1a4[3]] ];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
SmPV: determinant(SmPV);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: section start ]
ЗАДАНИЕ №5
   [wxMaxima: section end   ] */


/* [wxMaxima: caption start ]

   [wxMaxima: caption end   ] */
/* [wxMaxima: image   start ]
png

   [wxMaxima: image   end   ] */

/* [wxMaxima: caption start ]

   [wxMaxima: caption end   ] */
/* [wxMaxima: image   start ]
png

   [wxMaxima: image   end   ] */

/* [wxMaxima: caption start ]

   [wxMaxima: caption end   ] */
/* [wxMaxima: image   start ]
png
iVBORw0KGgoAAAANSUhEUgAAARsAAAAYCAIAAABFrM5sAAAAA3NCSVQICAjb4U/gAAAMtElEQVR4nO1baVRT1xbeuZmTEhEhTIoKCtWqtWqhiFSx6lILIlarS1Ha+nzWAZ9TKfKEKrW4sCpSfRXrAFisdQBF1OKMoA+UVoUqBRRFGQxQhpAEEpLc835kIGROuLh0Pb5/yT3Z+/u+ffe559x7A+jNgOBW1EcLUmrkPZdB9mRf0MR9QRM33RYSGbbniVsE2RPiJSL02sm0BARbAgTF6VnIHm33G7kmR9yzWUTXVoqurXzbJ7ZISlTIV0PcInRKJEzl6yjTEhBa9Teio1rPfebqEZ4j6ek8kptIcnPNENfQ9CZiAr4q4hZBLZEola+nTEtAZNUxMBOigqjRnAm7n+KaX6K6n0PsyCQFyNwlmQJzwxmD7OmR8O354dvzpYrPjVmpmaJx/uNo6rQtvyctDxhqz6KzHYdNW5NaLECWZeiozTsYMW/8UHsWO/h459e0sUAb+6G3+Hzq2Trc8K8VIbKXOqiUkzAyjW1PY9u7e4dsPFrUqmKjQ1wDGn6aSmUZTJqjlmiGSgAAwFsend25OmS8lxOHybL3nLzcc/LyvdefVp6L3ZMvBeMyCeBLJLoUvkX9tdlVNwdmdJ0AIcGtiJEMEs1vV4XmSln6cNtYGkkZCOOGZQkI6HHJw50f9vPdUe67o1ymSH9ivi3l/W1/yZQD5JXJS+fHnCmua215fvOHue40jDsrudLsFbzkxdnw9zgszznfHMst4wmkuMYxGUKysu0+VJvZqabnK3l7VeondmS7ecfqOqTCmkJhTWFymBcNc5x/og7XR1wDXfwkcvNhjjkqieaoFD8+tXY8l+E0YeXeC/deNIs7xI1llxvLLn8/eyCVM+8EHxmVSQxfgmC08GZX3SRMdxQ/J4KfExGyasVUulZHtWaHB0XnE7vJFd2JGcsiMYJSm4NSmxFCCImvrxpIYs/5RZVHVpq677dmtR3CqysHkakffP/YrILKqn5d0J/mtiClvN3QEOGxOSyS89ILpjcF+MufprHsF53hd4YviRtHxZz+eVmih3gntPwk8PwxzxylRJMqxSX7A50p7FGrs6q19xh4Q+on03ZXyI3JJIxvdyEzXXhV1bufzMSqD/GvxyZisYnYuphJfUhdDuHVxxN+KTgV8dnahKxSYq7UiH8z4WitqyPFhstlcbksAAC8pbSsFvVzcqQoB5G9lqyabqvmwv7AfwwNpB1SM+Ljzw6ELs3gRmelhA1lGBpEcXF2gIayklqTbBsvny94a+anH3EUHwFQU9H9Spw9+v1hFD3E1SKv6/WTEJhnjlIiNJSV1MoNxmq/u23huosdU3ZlJAS6aokAUh+vgKAPBmAGZRLJt3vAnx0wXXhV1bufzmhHoeYrW/YxNm5mbNzsb6N1THo/ae+1pobSvNOJ64NHj5i1u5Dfza5CDdeSiydEBXKawMGJizlxMQAAWeWzahnG6cshG/gVv5kPgwICPMgAAIKctcNy1g5zeHfzHbHOUNHVuNhc2pQZzIOBnnZMlvOYxfvuteqMIvex5WDyqsrnpug2X8nMZc2cN5nV0Vr78ErSiitJKz5ele0Qun9fWH/MEHGVpTp+KrjrJ241upqjhlIiJq+qfC4z8FO8MjlqTxEas37nUg99zUL1WbXal2q6Pt3gS4whoqtxsaYLr6p6t1IBgNGOQo3Z3xzoExk1nh01nq1zlDpmy526F49undm7dro7uer8V8Ffnq7rRk/htTlX5MEr/FFNTTuJ6+SAOTlgAABIKBAioNGYhn528fzjyV+H+yi3xcpLr76h7bd+Ta9jDBo8fGLkmT8ri48Gt58In7I47aXWMBKdTiMhkYBvgnDrtcwbfF5KkA2F3sd1VGBcdWBc9dyM8gcpizyohoh3WqovoiHiVkPbHBWUEklIJDA0Dcofn0jNFTH8l4YNM37xMVGfbvElwpD2W7+m1+kvvGZsVdW7mw7AoF2o4Xz0IW5UmjfLwAAShWXXf7hf/+F+wUtCv58zfVNGws8Vn2wcYvbdQ03IefefucyaNpgiL3xRi1NGOfZTh5HJcQC5XO9cilpvxB+hRqd95qYcbhOQWAoAf+sZi9cUF/Exr/n/WjDOFQMYOnf33iuZUw8nHofQ9V0G0uk0AJnUxMpDcCPzqmTyj1WXlvVtLM89ErEsGgC+XbNjzI1dU+xIeombsNQmILFUD3G8tjD7D57+xRnZDgDemeTnri+ijjnaEgHAoErB7/kPZRRPfz8nU/XUkVlbeNEw33cAwFy+BgwBU55oGqKoOgDoKfzThes91OqUVTch1gwY6ChUfzY6dUB02lhzph4SZ+zGQ9EX34krfyqDIVbcQ5UU75wbsOm2ajNGHjDVgaoOzmazSEjS3q57YxPVZW36gbrl8FJ3s1Yc4rY2IHM5TNWqneX3cQDzp0tPtMdJpTIgMVmGZhIFRDczr4jG/XuGC5mCcYfPiEjadBkAPML/803yyskbhmC6xC2yVANtV7+bE5Yp0XuM6gsA8SW3InTnMaPmKCQCAIulfzOHtzY2yxBmz+1nqqF062OUbzwAWM5XG8Y96WKIuK0NyACgp/BVOHR2lLLqpnObgv6OQk0XDqWkXzyQHqV1YIMHOSow5eW5sL5dK4H19/Ee6MJytOYCJSxMy/c9z8dtSQCoOXWW87Ja5YoPAIDs6uqIoRfCNq3rP2q9uyf27sz9O6bZm7fDJzkOcqPISitr5dBfoZpqa8fG+tlrjUNCkQhhDi4uxoK138q8xB+9fsYAJU+MY8sBADLgzY0tOACmQ1y/pRs8yFGBAKDHUhXeWnJWvMQshRoajJujlAgALi76z1/Mrr8rkyR/Wc2Tg4vRZZ9ufYjnqwPzPVFUHQD0FF7TcFXVLSSuB/pbgNTvc+37qm0n5jJofrsq5OIsPbXHX94vd1u8cITFN3xQ47Wk3IHz/JX3e/AGXj2OcZ24GChuTADZ2dPDFv7m8TSXfUj4KD2lxPfbbz92IQOS8h+f3/zVkUrjj+dI9lPm+dOrMzLudahSPy4Vus2aoTVOXl/fhDM9PAcbidWWl5HdNCJopmo+lT8/dTzv1PE8CebkP0m58dAirm2php/6LbUaps1RSsSZHp6DDVSMHTAvkIuXHfvx0t9dpzLEv3OQf+fgngvVcn0yieJrbTBtKKquv/DDNGYTVdUJSGnubXb1GaD4KHpw9JutB288b8OlrS/yk1cHhx0qVb2FIn2w5W3Mdu7pevx0PW4woLyN9yB9S3DAmt+aVA9kpC3Fu6dyMGbAzr8Esr8EiocScl7SNDrFN/6J6hkF3pi39UOt1QhlZMwDKULSPxMmOiVMdOo36sssnm5qcVGcN4sxck1WpbCt4Y/9IW5uSzJ1GNYnTaNSfL67lDiBBY4hqU+1H43Ixbzbsf4cqteGXIFMKuSV5x2NnD6YQaIzSHT3sNOdL4vqEDfkp+IX0j8NEzcfRszRkWhMJULyqpOLPehYn/c+/yH7IU/YIRHWl+cd2/qPL+Jzv4jPbVKTNC7TWr6IKEMQEhfFmS68wpJtmYoztzvprO0oYUH8jCF96XQbRw/v2esP3OZplEx6P2YocOacrMdPGuwoWfHW0Yq9EokR/HMLQqgjJ9ytc9Kg+gDVR/HWhKxilz/dbmG6SBG8ON7XRntCJw9em9eBEBLnR3oxIr0YAFSfhAo9afGm/yYsGufMpDIdRszanPlM61U0CUKS3DXutHdj/rgb7UGic9juX9/v8gC29ZcQpkZ2EkZh2roOn7gg8nBB5OGCui5nVVfihv1UJBDnq4lb/cjXqDmdKpUSDatUCai/cyRywQQvZ1sGlWbjPDwgbNu5x+0IdX1IalRmN/gSYYgCuOnCKyz5vVBx5nYn2Zvwpqz8xY9TOcMj75j/brC0cPPipCqLE8kqkKxix/i3vL8rkSGEkLwoZnbsQ+vLaS3xnv1PhFoiQSqtkGk+XoUhqGvVuwmr7nX3ohe9MIA3oaOwAaHrPm2/cPa+WZtfEYDoXi5lboirpXnwmgt4zYXLtYHrl3mRAUCQd5wXuGSY9RZZRhzUxHu0KJ0SCVJpuUzz8SoM0bSEiGgEXOdeAWSVySHey39rNTFM8iwnLS0nLe3ykzbLc0juxUy6FzNp6s5HUoSkT7P3Jp4o7vbL9GYSR0ruVhG3CJJOicSptECm+XhFhmhaQgTekI5CSF59cllwxPXmnooveZS4KDRpUWhSKcHbgZ4mbhEUKomWiNBrJtMSEG3JG9NRCCFxSerGDUet+x+OccgqM6LX7S1oQQUtxAfvSeIWQa2yh/CayLQEPWAJCRH8dmbPAhfwRew+NkSvq3EhX8QiPuxrhv8PlRahByx5wzqqF714zdE7YfWiF0Tif1EEluShpyrCAAAAAElFTkSuQmCC
   [wxMaxima: image   end   ] */

/* [wxMaxima: input   start ] */
A: [2, 6];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
B: [4, -2];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
C: [-2, -6];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: subsect start ]
График
   [wxMaxima: subsect end   ] */


/* [wxMaxima: comment start ]
Создание векторов:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
ab: [ ab[1], ab[2] ];
bc: [ bc[1], bc[2] ];
ac: [ ac[1], ac[2] ];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Проекции векторов:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
ab: [B[1] - A[1], B[2] - A[2]];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
ac: [C[1] - A[1], C[2] - A[2]];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
bc: [C[1] - B[1], C[2] - B[2]];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
График
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
wxdraw2d (xrange = [-10, 20], yrange = [-10, 10],
                    head_length = 0.3, head_angle = 10,
                    color = black,
                    label (["A", A[1]+0.25, A[2]+0.25]),
                    label (["B", B[1]+0.25, B[2]+0.25]),
                    label (["C", C[1]-0.25, C[2]-0.25]),
                    color = red,  key = "вектор ab", vector( [A[1], A[2] ], [ ab[1], ab[2] ]),
                    color = blue, key = "вектор ac", vector( [A[1], A[2] ], [ ac[1], ac[2] ]),
                    color = green, key = "вектор bc", vector( [B[1], B[2] ], [ bc[1], bc[2] ]))$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: subsect start ]
Определение уравнения стороны AB
   [wxMaxima: subsect end   ] */


/* [wxMaxima: subsubsect start ]
Решение
   [wxMaxima: subsubsect end   ] */


/* [wxMaxima: comment start ]
Воспользуемся уравнением прямой, проходящей через 2 данные точки.
   [wxMaxima: comment end   ] */


/* [wxMaxima: comment start ]
Уравнение прямой, проходящей через 2 данные точки, в общем виде:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
kill (x, y, X1, Y1, X2, Y2)$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
eq0:        (y - Y1) / (Y2 - Y1) = (x - X1) / (X2 - X1);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Точка (x1, y1):
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
X1: A[1];           Y1: A[2];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Точка (x2, y2):
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
X2: B[1];           Y2: B[2];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Подставим координаты точек в уравнение прямой:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
eq1:    ev(eq0);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
eq1;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Выразим y из уравнения:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
sol1:   solve ([eq1], [y]);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
y(x):= ev(y, sol1);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
y(x);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: subsubsect start ]
Проверка
   [wxMaxima: subsubsect end   ] */


/* [wxMaxima: input   start ] */
A;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
y(2);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
B;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
y(4);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: subsect start ]
Определение высоты, проведенной из вершины А
   [wxMaxima: subsect end   ] */


/* [wxMaxima: subsubsect start ]
Решение
   [wxMaxima: subsubsect end   ] */


/* [wxMaxima: comment start ]
Воспользуемся уравнением прямой, проходящей через данную точку, перпендикулярно данному вектору.
   [wxMaxima: comment end   ] */


/* [wxMaxima: comment start ]
Вектор AD (высота из вершины А), перпендикулярен вектору ВС, ⇒ их скалярное произведение = 0.
   [wxMaxima: comment end   ] */


/* [wxMaxima: comment start ]
Вектор ВС:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
bc;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Точка А:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
A;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Уравнение прямой, проходящей через данную точку (x0, y0), перпендикулярно данному вектору (A0, B0), в общем виде:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
eq0:        A0 * (x - x0) + B0 * (y - y0) = 0;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Точка (x0, y0):
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
x0: A[1];           y0: A[2];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Вектор (A0, B0):
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
A0: bc[1];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
B0: bc[2];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Подставим данные в уравнение прямой:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
eq1:    ev(eq0);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
eq1;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Выразим y из уравнения:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
sol1:   solve ([eq1], [y]);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
yAD: ev(y, sol1);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
yAD;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: subsubsect start ]
График
   [wxMaxima: subsubsect end   ] */


/* [wxMaxima: comment start ]
Уравнение прямой BC:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
kill (x, y, X1, Y1, X2, Y2)$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
eq0:        (y - Y1) / (Y2 - Y1) = (x - X1) / (X2 - X1);            /* Уравнение прямой, проходящей через 2 данные точки, в общем виде */
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Точка B:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
X1: B[1];           Y1: B[2];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Точка C:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
X2: C[1];           Y2: C[2];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
eq1:    ev(eq0);            /* Подставим координаты точек в уравнение прямой */
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
eq1;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Выразим y из уравнения:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
sol1:   solve ([eq1], [y]);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
yBC:  ev(y, sol1);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
yBC;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Найдем координаты т.D - решим систему уравнений:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
D: [d1, d2];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
yAD;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
yBC;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
eq:        yAD = yBC;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
sol1:   solve (eq, x);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
D[1]:  ev(x, %);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
D[2]: ev(yAD, x=D[1]);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
D;      float(%);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
График
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
ad: [D[1] - A[1], D[2] - A[2]];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
wxdraw2d (xrange = [-10, 20], yrange = [-10, 10],
                    head_length = 0.3, head_angle = 10,
                    color = black,
                    label (["A", A[1]+0.25, A[2]+0.25]),
                    label (["B", B[1]+0.25, B[2]+0.25]),
                    label (["C", C[1]-0.25, C[2]-0.25]),
                    label (["D", D[1]+0.25, D[2]+0.25]),
                    color = red,  key = "вектор ab", vector( [A[1], A[2] ], [ ab[1], ab[2] ]),
                    color = blue, key = "вектор ac", vector( [A[1], A[2] ], [ ac[1], ac[2] ]),
                    color = green, key = "вектор bc", vector( [B[1], B[2] ], [ bc[1], bc[2] ]),
                    color = cyan, key = "вектор ad", vector( [A[1], A[2] ], [ ad[1], ad[2] ]))$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: subsubsect start ]
Проверка
   [wxMaxima: subsubsect end   ] */


/* [wxMaxima: comment start ]
Точка D:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
D;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Подставим точку D в уравнение прямой AD:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
yAD;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
D[1];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
ev(yAD, x=D[1]);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Подставим точку D в уравнение прямой BC:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
yBC;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
D[1];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
ev(yBC, x=D[1]);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: section start ]
ЗАДАНИЕ №6
   [wxMaxima: section end   ] */


/* [wxMaxima: caption start ]

   [wxMaxima: caption end   ] */
/* [wxMaxima: image   start ]
png

   [wxMaxima: image   end   ] */

/* [wxMaxima: caption start ]

   [wxMaxima: caption end   ] */
/* [wxMaxima: image   start ]
png
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
   [wxMaxima: image   end   ] */

/* [wxMaxima: input   start ] */
M1: [2, -1, -1];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
P:      2*x + y - z = 0;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
sol2:       solve([P], [z]);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
zP1: ev(z, sol2);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: subsect start ]
Решение
   [wxMaxima: subsect end   ] */


/* [wxMaxima: comment start ]
Воспользуемся уравнением плоскости, проходящей через данную точку, перпендикулярно данному вектору.
   [wxMaxima: comment end   ] */


/* [wxMaxima: comment start ]
Из общего уравнения плоскости найдем координаты нормального вектора:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
n: [2, 1, -1];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Точка, через которую проходит плоскость:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
M1;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Уравнение плоскости, проходящей через данную точку (x0, y0, z0), перпендикулярно данному вектору (A0, B0, C0), в общем виде:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
kill (x0, y0, z0, A0, B0, C0);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
eq0:        A0 * (x - x0) + B0 * (y - y0)  + C0 * (z - z0) = 0;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Точка (x0, y0, z0):
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
x0: M1[1];           y0: M1[2];          z0: M1[3];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Вектор (A0, B0, C0):
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
A0: n[1];          B0: n[2];            C0: n[3];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Подставим данные в уравнение прямой:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
eq1:    ev(eq0);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
eq1;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Выразим z из уравнения:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
sol1:   solve ([eq1], [z]);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
zM1: ev(z, sol1);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
zM1;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: subsect start ]
Проверка
   [wxMaxima: subsect end   ] */


/* [wxMaxima: comment start ]
Точка M1:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
M1;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Подставим точку M1 в уравнение плоскости:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
zM1;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
M1[1];          M1[2];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
ev(zM1, x=M1[1], y=M1[2]);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: subsect start ]
График
   [wxMaxima: subsect end   ] */


/* [wxMaxima: input   start ] */
wxdraw3d ( xu_grid = 40, yv_grid = 40,
                     color = blue, key = "плоскость Р: 2*x + y - z = 0", explicit ( zP1, x, -2, 2, y, -2, 2),
                     color = red, key = "плоскость, прох.ч/з точку М1: z=y+2*x-4", explicit ( zM1, x, -2, 2, y, -2, 2),
                     color = black, key = "точка М1", point_type = filled_circle, point_size = 1, points(makelist(M1)),
                     label (["M1", M1[1]+0.25, M1[2]+0.25, M1[3]+0.25]),
                     xlabel = "X", ylabel = "Y", zlabel = "Z" );
/* [wxMaxima: input   end   ] */



/* Old versions of Maxima abort on loading files that end in a comment. */
"Created with wxMaxima 22.04.0"$
