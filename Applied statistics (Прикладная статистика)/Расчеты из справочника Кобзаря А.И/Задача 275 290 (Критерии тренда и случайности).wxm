/* [wxMaxima batch file version 1] [ DO NOT EDIT BY HAND! ]*/
/* [ Created with wxMaxima version 22.04.0 ] */
/* [wxMaxima: input   start ] */
kill(all)$                              /* очистка всех переменных */
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Настройка каталогов
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
load("operatingsystem")$    /* загрузка пакета для работы с операционной системой */          
getcurrentdirectory ();        /* вывод текущего каталога */
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
maxima_tempdir: "C:\\Users\\Default\\AppData\\Local\\Temp"$          /* C:\\Users\\Alexander\\AppData\\Local\\Temp */;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Настройки программы
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
fpprintprec : 5$                  /* количество цифр при выводе чисел float или bigfloat; по умолчанию = 0; не может быть = 1 */
numer: true$                      /* true - проведение расчётов только с плавающей точкой, а не с рациональными числами */
keepfloat: false$                 /* false - не переводить десятичную запись числа в рациональную форму; по умолчанию = false */
ratepsilon: 2e-8$               /* допуск, на которую рациональное число при переводе может отклониться 
                                                от конечной десятичной записи; по умолчанию: 2.0e-15 */
ratprint: false$                    /* отключение сообщений о замене чисел с плавающей точкой на рациональные */
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
stats_numer;                    /* выдача результатов в формате с плавающей запятой */
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Загрузка дополнительных пакетов и библиотек
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
load(numericalio)$           /* загрузка пакета для чтения и записи матричных или потоковых данных */          
load(draw)$                     /* загрузка графического пакета */          
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
load(stats)$                    /* загрузка пакета для проверки статистических гипотез */
                                       /* загружает пакеты descriptive (для расчета описательной статистики), 
                                            distrib (для для выполнения вероятностых вычислений) и inference_result */;
load ("interpol")$                   /* загрузка пакета интерполяции */
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Установка шрифтов
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
set_draw_defaults (font = "Arial", font_size = 10)$                 /* устанавливаем вид и размер шрифта */
/* [wxMaxima: input   end   ] */


/* [wxMaxima: title   start ]
ЗАДАЧА 275-290
Критерии тренда и случайности
   [wxMaxima: title   end   ] */


/* [wxMaxima: input   start ] */
p_level: 0.95$                    /* доверительная вероятность */
α_level: 1-p_level;                   /* уровень значимости */
/* [wxMaxima: input   end   ] */


/* [wxMaxima: section start ]
Задача 275.
Критерий Аббе-Линника
   [wxMaxima: section end   ] */


/* [wxMaxima: comment start ]
Для НОРМАЛЬНО РАСПРЕДЕЛЕННЫХ  случайных величин.
   [wxMaxima: comment end   ] */


/* [wxMaxima: subsect start ]
Задача из источника (при n ≤ 60)
   [wxMaxima: subsect end   ] */


/* [wxMaxima: subsubsect start ]
Постановка задачи
   [wxMaxima: subsubsect end   ] */


/* [wxMaxima: caption start ]

   [wxMaxima: caption end   ] */
/* [wxMaxima: image   start ]
png

   [wxMaxima: image   end   ] */

/* [wxMaxima: comment start ]
(см. Кобзарь А.И. Прикладная математическая статистика. Для инженеров и научных работников. - М.: ФИЗМАТЛИТ, 2006. - с.517-519)
   [wxMaxima: comment end   ] */


/* [wxMaxima: comment start ]
ИСХОДНЫЕ ДАННЫЕ:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
X: read_list("Задача 275.txt");                                     /* cчитывание массива в формате Maxima, содержимое файла расценивается как одна строка */      
/* [wxMaxima: input   end   ] */


/* [wxMaxima: subsubsect start ]
Решение
   [wxMaxima: subsubsect end   ] */


/* [wxMaxima: heading5 start ]
Расчетное значение статистики критерия
   [wxMaxima: heading5 end   ] */


/* [wxMaxima: comment start ]
Объем выборки:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
n: length(X); 
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Выборочное среднее:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
μ: mean(X);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Среднеквадратическое отклонение:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
std(X);                 /* С.К.О по генеральной совокупности */
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
s: std1(X);                 /* С.К.О по выборке */
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Расчетное значение статистики критерия Аббе-Линника:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
sum ((X[i+1] - X[i])^2, i, 1, n-1);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
sum ((X[i] - μ)^2, i, 1, n);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
q_calc: 1/2 * sum ((X[i+1] - X[i])^2, i, 1, n-1) / sum ((X[i] - μ)^2, i, 1, n);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Нормальная аппроксимация (при n > 60):
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
Q_calc: - (1 - q_calc) * sqrt ( (2*n + 1) / ( 2 - (1 - q_calc)^2 ) );
/* [wxMaxima: input   end   ] */


/* [wxMaxima: heading5 start ]
Табличное значение статистики критерия
   [wxMaxima: heading5 end   ] */


/* [wxMaxima: comment start ]
Загружаем табличные значения статистики критерия Аббе-Линника (при n ≤ 60).
(см. Кобзарь А.И. Прикладная математическая статистика. Для инженеров и научных работников. - М.: ФИЗМАТЛИТ, 2006. - с.518)
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
qn: read_matrix ("qtable (критерий Аббе-Линника).txt", space)$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Промежуточные значения определим с помошью интерполяции:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
nn: makelist (qn[i, 1], i, 1, length (col (qn, 1)))$                 
q: makelist (qn[i, 2], i, 1, length (col (qn, 2)))$                 /* табличные значения значения статистики критерия аббе-Линника при p = 0.95 */
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
linearinterpol (transpose (matrix (nn, q)))$                /* линейная интерполяция */
q_table(x):= ''%$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
scene1: points (qn)$
scene2: explicit (q_table(x), x, smin(nn), smax(nn))$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
K_range_y: 1.4$                 /* коэф-т, учитывающий высоту графиков и гистограмм */
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
wxdraw2d (key_pos = top_right, proportional_axes = none,
                color = red, point_type = filled_diamant, point_size = 1, key = "табличные значения (при р = 0.95)", scene1,
                color = blue, key = "линейная интерполяция", scene2,
                xrange = [0, smax(nn)], yrange = [0, smax(q)*K_range_y],
                grid = true, grid = [5, 5],
                xaxis = true, xaxis_type = dots, xaxis_width = 2,
                yaxis = true, yaxis_type = dots, yaxis_width = 2,
                xlabel = "n", ylabel = "q",
                title = "Интерполяция табличных значений статистики критерия Аббе-Линника");
/* [wxMaxima: input   end   ] */


/* [wxMaxima: heading5 start ]
Проверка гипотезы
   [wxMaxima: heading5 end   ] */


/* [wxMaxima: input   start ] */
q_calc;         /* расчетное значение статистики критерия */
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
q_table(n);         /* табличное значение статистики критерия (при р = 0.95) */
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
Вывод:  if q_calc ≤ q_table(n) 
    then "Нулевая гипотеза о принадлежности всех выборочных значений одной генеральной совокупности ПРИНИМАЕТСЯ, т.е. 
набор значений МОЖЕТ быть признан случайным"
    else "Нулевая гипотеза о принадлежности всех выборочных значений одной генеральной совокупности ОТКЛОНЯЕТСЯ, т.е. 
набор значений НЕ МОЖЕТ быть признан случайным";
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Нормальная аппроксимация (при n > 60):
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
Q_calc;         /* расчетное значение статистики критерия */
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
Q_table: quantile_normal(1-p_level, 0 ,1);         /* табличное значение статистики критерия */
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
Вывод:  if Q_calc ≤ Q_table 
    then "Нулевая гипотеза о принадлежности всех выборочных значений одной генеральной совокупности ПРИНИМАЕТСЯ, т.е. 
набор значений МОЖЕТ быть признан случайным"
    else "Нулевая гипотеза о принадлежности всех выборочных значений одной генеральной совокупности ОТКЛОНЯЕТСЯ, т.е. 
набор значений НЕ МОЖЕТ быть признан случайным";
/* [wxMaxima: input   end   ] */


/* [wxMaxima: subsect start ]
Смоделированная задача (при n > 60)
   [wxMaxima: subsect end   ] */


/* [wxMaxima: subsubsect start ]
Моделируем выборку с распределение Вейбулла
   [wxMaxima: subsubsect end   ] */


/* [wxMaxima: comment start ]
Смоделируем выборку с нормальным законом распределения:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
n_X1: 55$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
λ: 1$                 /* заданные параметры распределения */
k: 0.9$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
X1: random_weibull (k, λ, n_X1)$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
TitleString: "Распределение Вейбулла W(k,λ) (k = 1, λ =7)"$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
X1_lim_min: mean(X1) - 4*std1(X1);                  /* принимаем условное значение для построения графиков */
X1_lim_max: mean(X1) + 4*std1(X1);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Параметры распределения, оцененные по выборке:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
 μ_X1: mean(X1);
s_X1: std1(X1);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Гистограмма:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
hist_X1: histogram_description (X1,
                                               nclasses = sturges,                    /* sturges - алгоритм группирования Стерджесса; fd - Фридмана-Диакониса;  scott  - Скотта*/                                                       
                                               frequency = absolute,    /* Абсолютная частота (absolute), Относительная частота (relative), Проценты (percent), Плотность (density) */
                                               fill_density = 0.5)$
bars_X1: hist_X1[5]$                  /* извлекаем данные из результатов применения функции histogram_description */
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
m_emp_X1: makelist (part (bars_X1, i)[2], i, 1, length(bars_X1));                  /* формируем список эмпирических частот по интервалам */
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
Δ_hist_X1: makelist (part (bars_X1, i)[3], i, 1, length(bars_X1))$                  /* формируем список ширины интервалов */
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
K: length(bars_X1);                  /* число интервалов группирования*/
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
sum (m_emp_X1[i], i, 1, length(m_emp_X1));                  /* проверяем правильность подсчета эмпирических частот по интервалам */
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
wxdraw2d ( color = red, key = "эмпирический полигон частот",
                     hist_X1,
                     color = blue, key = "теоретическая нормальная кривая",
                     explicit ( n_X1 * (range(X1)/K)*pdf_normal(x, μ_X1, s_X1), x, X1_lim_min, X1_lim_max),
                     xrange = [X1_lim_min, X1_lim_max],
                     yrange = [0, smax(m_emp_X1)*1.5],
                     grid = true,
                     title = TitleString,                                            
                     fill_color = red,
                     xlabel = "x", ylabel = "Абсолютная частота (absolute)");
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Диаграмма размаха (box-and-whisker):
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
wxdraw2d ( boxplot_description ( X1,
                                                range = 1.5,      /* диапазон (по умолчанию, inf): положительный коэффициент межквартильного диапазона для определения границ выбросов */
                                                box_orientation = horizontal,
                                                box_width = 0.2, line_width = 3, outliers_size = 2,                                                 
                                                color = red,
                                                title = TitleString,
                                                xlabel = "x", ylabel = " " ) )$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
P-P график
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
X1sort: sort(X1)$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
Ptheor: makelist ( (i-0.375)/(n_X1+0.25), i, 1, n_X1 )$                   /* расчет эмпирической вероятности по формуле Блома */
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
Zsort: makelist ( (X1sort[i]-μ_X1)/s_X1, i, 1, n_X1 )$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Теоретическая функция распределения
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
Pemp: makelist ( cdf_normal (Zsort[i], 0, 1), i, 1, n_X1)$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
scene1: points (transpose (matrix (Pemp, Ptheor)))$                  /* формируем матрицу экспериметнальных данных */
scene2: explicit (x, x, 0, 1)$                   /* формируем выражение теоретической прямой */
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
wxdraw2d (color = red, point_type = 6, key = "эмпирические данные", scene1,
                color = blue, key = "нормальное распределение", scene2,
                key_pos = top_left,
                grid = true,
                title = TitleString,
                xlabel = "Z", ylabel = "P");
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Проверка нормальности по критерию Шапиро-Уилка
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
test_normality(X1);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
if take_inference(2, %) ≥ α_level then sprint("Так как Pvalue ≥ 0.05, то гипотеза о нормальном законе распределения ПРИНИМАЕТСЯ")
                                               else sprint("Так как Pvalue < 0.05, то гипотеза о нормальном законе распределения ОТКЛОНЯЕТСЯ")$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: subsubsect start ]
Решение
   [wxMaxima: subsubsect end   ] */


/* [wxMaxima: heading5 start ]
Расчетное значение статистики критерия
   [wxMaxima: heading5 end   ] */


/* [wxMaxima: comment start ]
Объем выборки:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
n: length(X1); 
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Выборочное среднее:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
μ: mean(X1);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Среднеквадратическое отклонение:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
std(X1);                 /* С.К.О по генеральной совокупности */
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
s: std1(X1);                 /* С.К.О по выборке */
/* [wxMaxima: input   end   ] */


/* [wxMaxima: heading5 start ]
Проверка гипотезы
   [wxMaxima: heading5 end   ] */


/* [wxMaxima: input   start ] */
q_calc: 1/2 * sum ((X1[i+1] - X1[i])^2, i, 1, n-1) / sum ((X1[i] - μ)^2, i, 1, n);         /* расчетное значение статистики критерия */
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
q_table(n);         /* табличное значение статистики критерия (при р = 0.95) */
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
Вывод:  if q_calc ≤ q_table(n) 
    then "Нулевая гипотеза о принадлежности всех выборочных значений одной генеральной совокупности ПРИНИМАЕТСЯ, т.е. 
набор значений МОЖЕТ быть признан случайным"
    else "Нулевая гипотеза о принадлежности всех выборочных значений одной генеральной совокупности ОТКЛОНЯЕТСЯ, т.е. 
набор значений НЕ МОЖЕТ быть признан случайным";
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Нормальная аппроксимация (при n > 60):
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
Q_calc: - (1 - q_calc) * sqrt ( (2*n + 1) / ( 2 - (1 - q_calc)^2 ) );         /* расчетное значение статистики критерия */
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
Q_table: quantile_normal(1-p_level, 0 ,1);         /* табличное значение статистики критерия */
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
Вывод:  if Q_calc ≤ Q_table 
    then "Нулевая гипотеза о принадлежности всех выборочных значений одной генеральной совокупности ПРИНИМАЕТСЯ, т.е. 
набор значений МОЖЕТ быть признан случайным"
    else "Нулевая гипотеза о принадлежности всех выборочных значений одной генеральной совокупности ОТКЛОНЯЕТСЯ, т.е. 
набор значений НЕ МОЖЕТ быть признан случайным";
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Т.к. n > 60, то воспользуемся нормальной аппроксимацией:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
q_calc: 1/2 * sum ((X1[i+1] - X1[i])^2, i, 1, n-1) / sum ((X1[i] - μ)^2, i, 1, n);
Q_calc: - (1 - q_calc) * sqrt ( (2*n + 1) / ( 2 - (1 - q_calc)^2 ) );                    /* расчетное значение статистики критерия */
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
Q_table: quantile_normal(1-p_level, 0 ,1);         /* табличное значение статистики критерия */
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
Вывод:  if Q_calc ≤ Q_table 
    then "Нулевая гипотеза о принадлежности всех выборочных значений одной генеральной совокупности ПРИНИМАЕТСЯ, т.е. 
набор значений МОЖЕТ быть признан случайным"
    else "Нулевая гипотеза о принадлежности всех выборочных значений одной генеральной совокупности ОТКЛОНЯЕТСЯ, т.е. 
набор значений НЕ МОЖЕТ быть признан случайным";
/* [wxMaxima: input   end   ] */


/* [wxMaxima: section start ]
Задача 276.
Критерий Фостера-Стюарта
   [wxMaxima: section end   ] */


/* [wxMaxima: subsect start ]
Задача из источника (при n ≤ 50)
   [wxMaxima: subsect end   ] */


/* [wxMaxima: subsubsect start ]
Постановка задачи
   [wxMaxima: subsubsect end   ] */


/* [wxMaxima: comment start ]
Проверить наличие тренда критерием Фостера-Стюарта для данных задачи 275.
   [wxMaxima: comment end   ] */


/* [wxMaxima: subsubsect start ]
Решение
   [wxMaxima: subsubsect end   ] */


/* [wxMaxima: heading5 start ]
Расчетное значение статистики критерия
   [wxMaxima: heading5 end   ] */


/* [wxMaxima: input   start ] */
X;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Объем выборки:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
n: length(X); 
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
u: makelist (0, i, 1, n-1)$           /* создаем вспомогательные массивы */
l: makelist (0, i, 1, n-1)$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
Xmin: X[1]$
Xmax: X[1]$
for i: 2 step 1 thru n do ( if X[i] > Xmax then (u[i-1]: 1,
                                                                   Xmax: X[i]),
                                     if X[i] < Xmin then (l[i-1]: 1,
                                                                   Xmin: X[i]))$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
u;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
l;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
d: makelist (u[i] - l[i], i, 1, n-1);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
S: makelist (u[i] + l[i], i, 1, n-1);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
d_calc: sum ( d[i], i, 1, n-1 );           /* статистика для проверки тренда средних величин */
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
S_calc: sum ( S[i], i, 1, n-1 );           /* статистика для проверки тренда дисперсий */
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Табулирование расчетов:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
String: ( [ "i", "X", "u", "l", "d", "S"])$
Table: "______________________________________________________"$

printf (true, "~a", Table)$
printf(true, "~10a~15a~15a~16a~14a~15a~15a", "",
            String[1],
            String[2],
            String[3],
            String[4],
            String[5],
            String[6],            
            "")$
printf (true, "~a", Table)$
for i: 2 step 1 thru n do printf (true,"~10d~15,2f~13d~16d~13d~16d~%",
                                                                i,
                                                                X[i],    
                                                                u[i-1],
                                                                l[i-1],    
                                                                d[i-1],
                                                                S[i-1])$
printf (true, "~a", Table)$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: heading5 start ]
Табличное значение статистики критерия
   [wxMaxima: heading5 end   ] */


/* [wxMaxima: comment start ]
Загружаем табличные значения постоянных f и l критерия Фостера-Стюарта (при n ≤ 50).
(см. Кобзарь А.И. Прикладная математическая статистика. Для инженеров и научных работников. - М.: ФИЗМАТЛИТ, 2006. - с.519)
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
FS: read_matrix ("FS (критерий Фостера-Стюарта).txt", space);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Промежуточные значения определим с помошью интерполяции:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
nn: makelist (FS[i, 1], i, 1, length (col (FS, 1)))$                 
ff: makelist (FS[i, 2], i, 1, length (col (FS, 2)))$
ll: makelist (FS[i, 3], i, 1, length (col (FS, 3)))$                 /* табличные значения значения статистики критерия аббе-Линника при p = 0.95 */
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
linearinterpol (transpose (matrix (nn, ff)))$                /* линейная интерполяция */
f_table(x):= ''%$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
linearinterpol (transpose (matrix (nn, ll)))$                /* линейная интерполяция */
l_table(x):= ''%$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Аппроксимация табличных значений при n > 50:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
f_appr(x):= if x > 50 then sqrt (2*log(x) - 0.8456);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
l_appr(x):= if x > 50 then sqrt (2*log(x) - 3.4253);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Графики табличных значений:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
K_range_y: 1.4$                 /* коэф-т, учитывающий высоту графиков и гистограмм */
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
scene_f_1: points ( addcol (transpose(matrix (nn)), transpose(matrix (ff))) )$
scene_f_2: explicit (f_table(x), x, smin(nn), smax(nn))$
scene_f_3: explicit (f_appr(x), x, 51, 100)$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
wxdraw2d (key_pos = top_right, proportional_axes = none,
                color = red, point_type = filled_diamant, point_size = 1, key = "табличные значения", scene_f_1,
                color = blue, key = "линейная интерполяция", scene_f_2,
                color = magenta, key = "аппроксимация при n > 50", scene_f_3,    
                xrange = [0, 100], yrange = [1, smax(ff)*K_range_y],
                grid = true, grid = [5, 5],
                xaxis = true, xaxis_type = dots, xaxis_width = 2,
                yaxis = true, yaxis_type = dots, yaxis_width = 2,
                xlabel = "n", ylabel = "f",
                title = "Интерполяция табличных значений постоянной f критерия Фостера-Стюарта");
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
scene_l_1: points ( addcol (transpose(matrix (nn)), transpose(matrix (ll))) )$
scene_l_2: explicit (l_table(x), x, smin(nn), smax(nn))$
scene_l_3: explicit (l_appr(x), x, 51, 100)$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
wxdraw2d (key_pos = top_right, proportional_axes = none,
                color = red, point_type = filled_diamant, point_size = 1, key = "табличные значения", scene_l_1,
                color = blue, key = "линейная интерполяция", scene_l_2,
                color = magenta, key = "аппроксимация при n > 50", scene_l_3,        
                xrange = [0, 100], yrange = [1, smax(ll)*K_range_y],
                grid = true, grid = [5, 5],
                xaxis = true, xaxis_type = dots, xaxis_width = 2,
                yaxis = true, yaxis_type = dots, yaxis_width = 2,
                xlabel = "n", ylabel = "l",
                title = "Интерполяция табличных значений постоянной l критерия Фостера-Стюарта");
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Функции табличных значений постоянных f и l критерия Фостера-Стюарта:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
f_tab(n):= if n ≥ 10 and n ≤ 50 then f_table(n) else f_appr(n)$
l_tab(n):= if n ≥ 10 and n ≤ 50 then l_table(n) else l_appr(n)$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: heading5 start ]
Проверка гипотезы
   [wxMaxima: heading5 end   ] */


/* [wxMaxima: comment start ]
Объем выборки:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
n;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Расчетные значения величин d и S критерия Фостера-Стюарта:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
d_calc;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
S_calc;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Табличные значения постоянных f и l критерия Фостера-Стюарта:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
f_tab(n);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
l_tab(n);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Расчетные значения статистик критерия Фостера-Стюарта:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
td_calc: d_calc / f_tab(n);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
tS_calc: (S_calc - (f_tab(n))^2) / l_tab(n);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Табличные значения статистик критерия Фостера-Стюарта:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
t_FS_calc: quantile_student_t ( (1 + p_level)/2 , n);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Проверка гипотезы о наличии тренда средних величин:
   [wxMaxima: comment end   ] */


/* [wxMaxima: comment start ]
H0: тренд средних величин отсутствует
H1: тренд средних величин присутствует
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
Вывод:  if abs(td_calc) ≤ t_FS_calc then "Нулевая гипотеза принимается, т.е. тренд средних величин ОТСУТСТВУЕТ"
                                                      else "Нулевая гипотеза отклоняется, т.е. тренд средних величин ПРИСУТСТВУЕТ";
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Проверка гипотезы о наличии тренда дисперсии:
   [wxMaxima: comment end   ] */


/* [wxMaxima: comment start ]
H0: тренд дисперсии отсутствует
H1: тренд дисперсии присутствует
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
Вывод:  if abs(tS_calc) ≤ t_FS_calc then "Нулевая гипотеза принимается, т.е. тренд дисперсии ОТСУТСТВУЕТ"
                                                      else "Нулевая гипотеза отклоняется, т.е. тренд дисперсии ПРИСУТСТВУЕТ";
/* [wxMaxima: input   end   ] */



/* Old versions of Maxima abort on loading files that end in a comment. */
"Created with wxMaxima 22.04.0"$
